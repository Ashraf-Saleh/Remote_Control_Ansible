# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
  # Exercise - Rollback
  destory_environment:
    steps:
      - run: 
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  #say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #  docker:
  #    - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #  steps:
  #    - checkout
  #    - run:
  #        name: "Say hello"
  #        command: "echo Hello, World!"


  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-west-2
      - run:
          name: copy the DNS from server to inventory
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:Project,Values=Udacity" \
              --output text >> inventory

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["8a:63:1b:b0:22:7c:e8:19:29:85:97:ad:91:6e:90:19"]
      - run:
          name: Install Ansible
          command: apk add --update ansible

      - run:
          name: Run Playbook and Configure server
          command: ansible-playbook -i Inventory main-remote.yml

  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          # Fail the job intentionally to simulate an error
          command: return 1
      - destory_environment
        #  name: smoke test
        #  command: |
        #    URL="https://blog.udacity.com/"
            # Test if website exists
        #    if curl -s --head ${URL} 
        #    then
        #      return 0
        #    else
        #      return 1
        #    fi

  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: 
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            -- template-file bucket.yml \
            -- stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            -- parameter-overrides MyBucketName= "mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
      # Uncomment the step below if yoou wish to upload all contents of the current directory to the S3 bucket 
      #- run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} -- delete

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      #- say-hello
      #- create_infrastructure
      #- configure_infrastructure:
      #    requires:
      #      - create_infrastructure
      #- smoke_test
      - create_and_deploy_front_end
